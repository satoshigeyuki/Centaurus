parse : expr '$' ;
expr : or_expr ;
or_expr : and_expr ('or' and_expr)* ;
and_expr : rel_expr ('and' rel_expr)* ;
rel_expr : bit_or_expr (('<' | '>' | '<=' | '>=' | '~=' | '==') bit_or_expr)? ;
bit_or_expr : bit_excl_or_expr ('|' bit_excl_or_expr)* ;
bit_excl_or_expr : bit_and_expr ('~' bit_and_expr)* ;
bit_and_expr : bit_shift_expr ('&' bit_shift_expr)* ;
bit_shift_expr : concat_expr (('<<' | '>>') concat_expr)* ;
concat_expr : add_expr ('..' add_expr)* ;
add_expr : mult_expr (('+' | '-') mult_expr)* ;
mult_expr : unary_expr (('*' | '/' | '%' | '//') unary_expr)* ;
unary_expr : '-' pow_expr | '+' pow_expr | '#' pow_expr | '~' pow_expr | pow_expr ;
pow_expr : atom ('^' atom)* ;
atom : '...' | Number | String | 'nil' | 'true' | 'false' |> var;
var : callee tail* ;
callee : '(' expr ')' | Name ;
tail : '.' Name | '[' expr ']' | ':' Name '(' expr_list ')' | ':' Name String | '(' expr_list ')' | String ;
label : '::' Name '::' ;
expr_list : expr (',' expr)* ;
name_list : Name (',' Name)* ;
Name : /[A-Z_]+/ ;
Number : /(([0-9]+(\.[0-9]*)?([eE][\-+]?[0-9]+)?)|(\.[0-9]+([eE][\-+]?[0-9]+)?))|(0[xX][0-9a-fA-F](\.[0-9a-fA-F]*)?([pP][\-+]?[0-9]+)?)/ ;
String : /"((\\([abfnrtv\\"'z]|([0-9]([0-9][0-9]?)?)|(x[0-9A-Fa-f][0-9A-Fa-f])))|[^\\"\r\n])*"/ | /'((\\([abfnrtv\\"'z]|([0-9]([0-9][0-9]?)?)|(x[0-9A-Fa-f][0-9A-Fa-f])))|[^\\'\r\n])*'/ | /\[=*\[([^\\]|(\\([abfnrtv\\"'z]|([0-9]([0-9][0-9]?)?)|(x[0-9A-Fa-f][0-9A-Fa-f]))))*\]=*\]/ ;
